set shell=/bin/bash

""" Basic Setting(s)
syntax on
set nocompatible
set mouse=nv
set ffs=unix,mac,dos
set number
set showmode
set backspace=indent,eol,start
set t_Co=256
set completeopt-=preview

" remember last cursor position
au BufReadPost * if line("'\"") > 0|if line("'\"") <= line("$")|exe("norm '\"")|else|exe "norm $"|endif|endif

""" Package Management
if has('vim_starting')
    set runtimepath+=~/.vim/bundle/neobundle.vim/
endif

call neobundle#begin(expand('~/.vim/bundle/'))

" Let NeoBundle manage NeoBundle
NeoBundleFetch 'Shougo/neobundle.vim'

call neobundle#end()

NeoBundle 'kien/ctrlp.vim'
NeoBundle 'Raimondi/delimitMate'
NeoBundle 'mattn/emmet-vim'
NeoBundle 'othree/html5.vim'
NeoBundle 'Valloric/YouCompleteMe'
NeoBundle 'vim-scripts/SWIG-syntax'
NeoBundle 'majutsushi/tagbar'
NeoBundle 'MarcWeber/vim-addon-haskell'
NeoBundle 'MarcWeber/vim-addon-actions'
NeoBundle 'bling/vim-airline'
NeoBundle 'kchmck/vim-coffee-script'
NeoBundle 'tshirtman/vim-cython'
NeoBundle 'dag/vim-fish'
NeoBundle 'airblade/vim-gitgutter.git'
NeoBundle 'garbas/vim-snipmate'
NeoBundle 'honza/vim-snippets'
NeoBundle 'tomtom/tlib_vim'
NeoBundle 'MarcWeber/vim-addon-mw-utils'
NeoBundle 'tpope/vim-surround'
NeoBundle 'andviro/flake8-vim'

filetype plugin indent on

NeoBundleCheck

""" Encoding Setting(s)
set encoding=utf-8
set fileencoding=utf-8
set fileencodings=ucs-bom,utf-8,big5,euc-jp,gbk,euc-kr,latin1
set termencoding=utf-8

""" Color Scheme Setting(s)
colorscheme desert
highlight Pmenu ctermfg=1 ctermbg=4 guibg=#CCCCCC
set guifont=Courier\ New:h16

""" Backup Setting(s)
"set backup
"set backupdir=$HOME/.vim/backup
set nobackup

""" Indent Setting(s)
set autoindent
set smartindent
set expandtab
set shiftwidth=4
set tabstop=4
set softtabstop=4

""" Folding Setting(s)
"set foldenable
"set foldmethod=indent
"set foldcolumn=2
"set foldlevel=99

""" Search Setting(s)
set showcmd
set incsearch
set showmatch
set hlsearch

""" Status Bar Setting(s)
set laststatus=2

"let g:airline_powerline_fonts = 1
let g:airline#extensions#tabline#enabled = 1
let g:airline_left_sep = ' '
let g:airline_right_sep = ''

""" Copy & Paste Shortcut(s)
vmap <leader>y y:call system("pbcopy", getreg("\""))<CR>
vmap <leader>x x:call system("pbcopy", getreg("\""))<CR>
nmap <leader>p :call setreg("\"",system("pbpaste"))<CR>p

""" Tab Shortcut(s)
nmap <leader>t :tabnew<CR>
nmap <S-h> gT
nmap <S-l> gt

""" Indent Shortcut(s)
vmap > >gv
vmap < <gv

""" Reset Indent
function! s:ResetIndent()
  setlocal shiftwidth=2
  setlocal tabstop=2
  setlocal softtabstop=2
endfunction

augroup ResetIndent
  autocmd FileType html call s:ResetIndent()
  autocmd FileType xml  call s:ResetIndent()
  autocmd FileType css  call s:ResetIndent()
  autocmd FileType vim  call s:ResetIndent()
augroup END

""" Sidebar Setting(s)
nmap <leader>g :TagbarToggle<CR>
let s:SidebarWidth = 30
let g:tagbar_width = s:SidebarWidth
let g:tagbar_ctags_bin = '/usr/local/bin/ctags'

""" Ignore File(s)
set wildignore+=*.o,*.obj,*.pyc,*.so
set wildignore+=*.png,*.jpg,*.gif,*.ico
set wildignore+=*.swp
set wildignore+=.DS_Store

""" Flake Setting(s)
let g:PyFlakeOnWrite = 1
let g:PyFlakeMaxLineLength = 100
